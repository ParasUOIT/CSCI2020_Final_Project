def currentOS = OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
}

project(':server') {
    sourceSets {
        main {
            java {
                srcDir '../src'
                include 'Server/**'
                include 'util/**'
            }
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
        compile group: 'com.microsoft.sqlserver', name:'mssql-jdbc', version: '8.2.2.jre11'

    }

    jar {
        doFirst {
            from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        }
        exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
        manifest {
            attributes 'Main-Class': 'Server.Server',
                    'Implementation-Title': 'Chatter Server',
                    'Implementation-Version': 1.0
        }
    }
}

project(':client') {
    sourceSets {
        main {
            java {
                srcDir '../src'
                include 'Client/**'
                include 'util/**'
            }
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
    }

    jar {
        doFirst {
            from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        }
        exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
        manifest {
            attributes 'Main-Class': 'Client.ClientGUI',
                    'Implementation-Title': 'Chatter Client',
                    'Implementation-Version': 1.0
        }
    }
}









